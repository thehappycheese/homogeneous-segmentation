import numpy as np
import pytest
from homogeneous_segmentation._cumulative_p import cumulative_p

@pytest.mark.parametrize("input, expected", [
    (
        [1, 2, 3, 4, 2, 3, 1, 5, 3, 4, 6, 4, 3, 7, 5, 6, 4, 5],
        [np.nan, 0.428838935182903, 0.443260154044673, 0.458240045304168, 0.423399582562273, 0.393311247140513, 0.377949215882596, 0.410455296586387, 0.377853499716804, 0.366030944357447, 0.393781962968253, 0.382609550708669, 0.337546398418238, 0.335624470088382, 0.344322190263678, 0.319698528522059, np.nan]
    ),
    (
        [3, 2, 1, 3, 5, 6, 5, 6, 4, 7, 9, 4, 3, 2, 3, 1, 3, 2],
        [np.nan, 0.419060210386604, 0.505328697494372, 0.469300009004604, 0.534160836111054, 0.56267048797758, 0.554811415278798, 0.564343017745683, 0.569223713870096, 0.592368809056212, 0.441625652981793, 0.418713372451355, 0.434892584764582, 0.469300009004604, 0.505328697494372, 0.419060210386604, np.nan]
    )
])
def test_p_cumulative(input, expected):
    
    result = cumulative_p(np.array(input))
    assert np.allclose(result, np.array(expected), equal_nan=True)
